// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: context_domain_table_detail.proto

package contextdomain_table

import (
	context "context"
	output "github.com/soustify/data-gateway-buffer-go/pkg/output"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ContextDomainTableDetailService_Create_FullMethodName          = "/contextdomain_table.ContextDomainTableDetailService/Create"
	ContextDomainTableDetailService_RegisterDetails_FullMethodName = "/contextdomain_table.ContextDomainTableDetailService/RegisterDetails"
)

// ContextDomainTableDetailServiceClient is the client API for ContextDomainTableDetailService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ContextDomainTableDetailServiceClient interface {
	Create(ctx context.Context, opts ...grpc.CallOption) (ContextDomainTableDetailService_CreateClient, error)
	RegisterDetails(ctx context.Context, opts ...grpc.CallOption) (ContextDomainTableDetailService_RegisterDetailsClient, error)
}

type contextDomainTableDetailServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewContextDomainTableDetailServiceClient(cc grpc.ClientConnInterface) ContextDomainTableDetailServiceClient {
	return &contextDomainTableDetailServiceClient{cc}
}

func (c *contextDomainTableDetailServiceClient) Create(ctx context.Context, opts ...grpc.CallOption) (ContextDomainTableDetailService_CreateClient, error) {
	stream, err := c.cc.NewStream(ctx, &ContextDomainTableDetailService_ServiceDesc.Streams[0], ContextDomainTableDetailService_Create_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &contextDomainTableDetailServiceCreateClient{stream}
	return x, nil
}

type ContextDomainTableDetailService_CreateClient interface {
	Send(*ContextDomainTableDetailRequest) error
	CloseAndRecv() (*output.PersistenceDataResponse, error)
	grpc.ClientStream
}

type contextDomainTableDetailServiceCreateClient struct {
	grpc.ClientStream
}

func (x *contextDomainTableDetailServiceCreateClient) Send(m *ContextDomainTableDetailRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *contextDomainTableDetailServiceCreateClient) CloseAndRecv() (*output.PersistenceDataResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(output.PersistenceDataResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *contextDomainTableDetailServiceClient) RegisterDetails(ctx context.Context, opts ...grpc.CallOption) (ContextDomainTableDetailService_RegisterDetailsClient, error) {
	stream, err := c.cc.NewStream(ctx, &ContextDomainTableDetailService_ServiceDesc.Streams[1], ContextDomainTableDetailService_RegisterDetails_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &contextDomainTableDetailServiceRegisterDetailsClient{stream}
	return x, nil
}

type ContextDomainTableDetailService_RegisterDetailsClient interface {
	Send(*RegistryEntityAuditRequest) error
	CloseAndRecv() (*output.PersistenceDataResponse, error)
	grpc.ClientStream
}

type contextDomainTableDetailServiceRegisterDetailsClient struct {
	grpc.ClientStream
}

func (x *contextDomainTableDetailServiceRegisterDetailsClient) Send(m *RegistryEntityAuditRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *contextDomainTableDetailServiceRegisterDetailsClient) CloseAndRecv() (*output.PersistenceDataResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(output.PersistenceDataResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ContextDomainTableDetailServiceServer is the server API for ContextDomainTableDetailService service.
// All implementations must embed UnimplementedContextDomainTableDetailServiceServer
// for forward compatibility
type ContextDomainTableDetailServiceServer interface {
	Create(ContextDomainTableDetailService_CreateServer) error
	RegisterDetails(ContextDomainTableDetailService_RegisterDetailsServer) error
	mustEmbedUnimplementedContextDomainTableDetailServiceServer()
}

// UnimplementedContextDomainTableDetailServiceServer must be embedded to have forward compatible implementations.
type UnimplementedContextDomainTableDetailServiceServer struct {
}

func (UnimplementedContextDomainTableDetailServiceServer) Create(ContextDomainTableDetailService_CreateServer) error {
	return status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedContextDomainTableDetailServiceServer) RegisterDetails(ContextDomainTableDetailService_RegisterDetailsServer) error {
	return status.Errorf(codes.Unimplemented, "method RegisterDetails not implemented")
}
func (UnimplementedContextDomainTableDetailServiceServer) mustEmbedUnimplementedContextDomainTableDetailServiceServer() {
}

// UnsafeContextDomainTableDetailServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ContextDomainTableDetailServiceServer will
// result in compilation errors.
type UnsafeContextDomainTableDetailServiceServer interface {
	mustEmbedUnimplementedContextDomainTableDetailServiceServer()
}

func RegisterContextDomainTableDetailServiceServer(s grpc.ServiceRegistrar, srv ContextDomainTableDetailServiceServer) {
	s.RegisterService(&ContextDomainTableDetailService_ServiceDesc, srv)
}

func _ContextDomainTableDetailService_Create_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ContextDomainTableDetailServiceServer).Create(&contextDomainTableDetailServiceCreateServer{stream})
}

type ContextDomainTableDetailService_CreateServer interface {
	SendAndClose(*output.PersistenceDataResponse) error
	Recv() (*ContextDomainTableDetailRequest, error)
	grpc.ServerStream
}

type contextDomainTableDetailServiceCreateServer struct {
	grpc.ServerStream
}

func (x *contextDomainTableDetailServiceCreateServer) SendAndClose(m *output.PersistenceDataResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *contextDomainTableDetailServiceCreateServer) Recv() (*ContextDomainTableDetailRequest, error) {
	m := new(ContextDomainTableDetailRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ContextDomainTableDetailService_RegisterDetails_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ContextDomainTableDetailServiceServer).RegisterDetails(&contextDomainTableDetailServiceRegisterDetailsServer{stream})
}

type ContextDomainTableDetailService_RegisterDetailsServer interface {
	SendAndClose(*output.PersistenceDataResponse) error
	Recv() (*RegistryEntityAuditRequest, error)
	grpc.ServerStream
}

type contextDomainTableDetailServiceRegisterDetailsServer struct {
	grpc.ServerStream
}

func (x *contextDomainTableDetailServiceRegisterDetailsServer) SendAndClose(m *output.PersistenceDataResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *contextDomainTableDetailServiceRegisterDetailsServer) Recv() (*RegistryEntityAuditRequest, error) {
	m := new(RegistryEntityAuditRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ContextDomainTableDetailService_ServiceDesc is the grpc.ServiceDesc for ContextDomainTableDetailService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ContextDomainTableDetailService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "contextdomain_table.ContextDomainTableDetailService",
	HandlerType: (*ContextDomainTableDetailServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Create",
			Handler:       _ContextDomainTableDetailService_Create_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "RegisterDetails",
			Handler:       _ContextDomainTableDetailService_RegisterDetails_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "context_domain_table_detail.proto",
}
