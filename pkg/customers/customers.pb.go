// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: customers.proto

package customers

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	input "github.com/soustify/data-gateway-buffer-go/pkg/input"
	output "github.com/soustify/data-gateway-buffer-go/pkg/output"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CustomersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EnStatus  input.StatusRequest `protobuf:"varint,2,opt,name=en_status,json=enStatus,proto3,enum=input.StatusRequest" json:"en_status,omitempty"`
	Name      string              `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Surname   string              `protobuf:"bytes,4,opt,name=surname,proto3" json:"surname,omitempty"`
	Email     string              `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	IdCognito string              `protobuf:"bytes,6,opt,name=id_cognito,json=idCognito,proto3" json:"id_cognito,omitempty"`
}

func (x *CustomersRequest) Reset() {
	*x = CustomersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customers_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomersRequest) ProtoMessage() {}

func (x *CustomersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customers_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomersRequest.ProtoReflect.Descriptor instead.
func (*CustomersRequest) Descriptor() ([]byte, []int) {
	return file_customers_proto_rawDescGZIP(), []int{0}
}

func (x *CustomersRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CustomersRequest) GetEnStatus() input.StatusRequest {
	if x != nil {
		return x.EnStatus
	}
	return input.StatusRequest(0)
}

func (x *CustomersRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomersRequest) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *CustomersRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CustomersRequest) GetIdCognito() string {
	if x != nil {
		return x.IdCognito
	}
	return ""
}

type CustomersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status      output.StatusResponse `protobuf:"varint,2,opt,name=status,proto3,enum=output.StatusResponse" json:"status,omitempty"`
	IdAuditable string                `protobuf:"bytes,3,opt,name=id_auditable,json=idAuditable,proto3" json:"id_auditable,omitempty"`
	Name        string                `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Surname     string                `protobuf:"bytes,5,opt,name=surname,proto3" json:"surname,omitempty"`
	Email       string                `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	IdCognito   string                `protobuf:"bytes,7,opt,name=id_cognito,json=idCognito,proto3" json:"id_cognito,omitempty"`
}

func (x *CustomersResponse) Reset() {
	*x = CustomersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_customers_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomersResponse) ProtoMessage() {}

func (x *CustomersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customers_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomersResponse.ProtoReflect.Descriptor instead.
func (*CustomersResponse) Descriptor() ([]byte, []int) {
	return file_customers_proto_rawDescGZIP(), []int{1}
}

func (x *CustomersResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CustomersResponse) GetStatus() output.StatusResponse {
	if x != nil {
		return x.Status
	}
	return output.StatusResponse(0)
}

func (x *CustomersResponse) GetIdAuditable() string {
	if x != nil {
		return x.IdAuditable
	}
	return ""
}

func (x *CustomersResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomersResponse) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *CustomersResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CustomersResponse) GetIdCognito() string {
	if x != nil {
		return x.IdCognito
	}
	return ""
}

var File_customers_proto protoreflect.FileDescriptor

var file_customers_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x1a, 0x0b, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfc, 0x01, 0x0a, 0x10, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0xb0, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x09, 0x65, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82, 0x01, 0x04, 0x18, 0x00, 0x18, 0x01, 0x52, 0x08, 0x65, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01,
	0x18, 0xc8, 0x01, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x27,
	0x0a, 0x0a, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x69, 0x64,
	0x43, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x22, 0x9b, 0x02, 0x0a, 0x11, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0xb0, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x0c, 0x69, 0x64, 0x5f, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x0b, 0x69, 0x64, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xc8,
	0x01, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05,
	0x10, 0x01, 0x18, 0xc8, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x27, 0x0a, 0x0a,
	0x69, 0x64, 0x5f, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x69, 0x64, 0x43, 0x6f,
	0x67, 0x6e, 0x69, 0x74, 0x6f, 0x32, 0x9c, 0x04, 0x0a, 0x10, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01,
	0x12, 0x36, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x28, 0x01, 0x12, 0x48, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x12, 0x3c, 0x0a, 0x08,
	0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x12, 0x2e, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x12, 0x3a, 0x0a, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x12, 0x2e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x55, 0x55, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x12, 0x3b, 0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x6e,
	0x65, 0x12, 0x12, 0x2e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x12, 0x2e,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x28, 0x01, 0x42, 0x5c, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x6f, 0x75, 0x73,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x5a, 0x42,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x75, 0x73, 0x74,
	0x69, 0x66, 0x79, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2d, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2d, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x73, 0x3b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_customers_proto_rawDescOnce sync.Once
	file_customers_proto_rawDescData = file_customers_proto_rawDesc
)

func file_customers_proto_rawDescGZIP() []byte {
	file_customers_proto_rawDescOnce.Do(func() {
		file_customers_proto_rawDescData = protoimpl.X.CompressGZIP(file_customers_proto_rawDescData)
	})
	return file_customers_proto_rawDescData
}

var file_customers_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_customers_proto_goTypes = []interface{}{
	(*CustomersRequest)(nil),               // 0: customers.CustomersRequest
	(*CustomersResponse)(nil),              // 1: customers.CustomersResponse
	(input.StatusRequest)(0),               // 2: input.StatusRequest
	(output.StatusResponse)(0),             // 3: output.StatusResponse
	(*input.PaginationRequest)(nil),        // 4: input.PaginationRequest
	(*input.FilteredRequest)(nil),          // 5: input.FilteredRequest
	(*input.UUIDRequest)(nil),              // 6: input.UUIDRequest
	(*output.CountResponse)(nil),           // 7: output.CountResponse
	(*output.PersistenceDataResponse)(nil), // 8: output.PersistenceDataResponse
	(*output.StatusDataResponse)(nil),      // 9: output.StatusDataResponse
}
var file_customers_proto_depIdxs = []int32{
	2,  // 0: customers.CustomersRequest.en_status:type_name -> input.StatusRequest
	3,  // 1: customers.CustomersResponse.status:type_name -> output.StatusResponse
	4,  // 2: customers.CustomersService.Paginate:input_type -> input.PaginationRequest
	5,  // 3: customers.CustomersService.Count:input_type -> input.FilteredRequest
	0,  // 4: customers.CustomersService.Create:input_type -> customers.CustomersRequest
	0,  // 5: customers.CustomersService.Update:input_type -> customers.CustomersRequest
	6,  // 6: customers.CustomersService.Inactive:input_type -> input.UUIDRequest
	6,  // 7: customers.CustomersService.Active:input_type -> input.UUIDRequest
	6,  // 8: customers.CustomersService.FindOne:input_type -> input.UUIDRequest
	6,  // 9: customers.CustomersService.Delete:input_type -> input.UUIDRequest
	1,  // 10: customers.CustomersService.Paginate:output_type -> customers.CustomersResponse
	7,  // 11: customers.CustomersService.Count:output_type -> output.CountResponse
	8,  // 12: customers.CustomersService.Create:output_type -> output.PersistenceDataResponse
	8,  // 13: customers.CustomersService.Update:output_type -> output.PersistenceDataResponse
	9,  // 14: customers.CustomersService.Inactive:output_type -> output.StatusDataResponse
	9,  // 15: customers.CustomersService.Active:output_type -> output.StatusDataResponse
	1,  // 16: customers.CustomersService.FindOne:output_type -> customers.CustomersResponse
	8,  // 17: customers.CustomersService.Delete:output_type -> output.PersistenceDataResponse
	10, // [10:18] is the sub-list for method output_type
	2,  // [2:10] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_customers_proto_init() }
func file_customers_proto_init() {
	if File_customers_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_customers_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_customers_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_customers_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_customers_proto_goTypes,
		DependencyIndexes: file_customers_proto_depIdxs,
		MessageInfos:      file_customers_proto_msgTypes,
	}.Build()
	File_customers_proto = out.File
	file_customers_proto_rawDesc = nil
	file_customers_proto_goTypes = nil
	file_customers_proto_depIdxs = nil
}
