// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: context_domain_table_change.proto

package contextdomain_change

import (
	context "context"
	output "github.com/soustify/data-gateway-buffer-go/pkg/output"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ContextDomainTableChangeService_Create_FullMethodName = "/contextdomain_change.ContextDomainTableChangeService/Create"
)

// ContextDomainTableChangeServiceClient is the client API for ContextDomainTableChangeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ContextDomainTableChangeServiceClient interface {
	Create(ctx context.Context, opts ...grpc.CallOption) (ContextDomainTableChangeService_CreateClient, error)
}

type contextDomainTableChangeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewContextDomainTableChangeServiceClient(cc grpc.ClientConnInterface) ContextDomainTableChangeServiceClient {
	return &contextDomainTableChangeServiceClient{cc}
}

func (c *contextDomainTableChangeServiceClient) Create(ctx context.Context, opts ...grpc.CallOption) (ContextDomainTableChangeService_CreateClient, error) {
	stream, err := c.cc.NewStream(ctx, &ContextDomainTableChangeService_ServiceDesc.Streams[0], ContextDomainTableChangeService_Create_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &contextDomainTableChangeServiceCreateClient{stream}
	return x, nil
}

type ContextDomainTableChangeService_CreateClient interface {
	Send(*ContextDomainTableChangeRequest) error
	CloseAndRecv() (*output.PersistenceDataResponse, error)
	grpc.ClientStream
}

type contextDomainTableChangeServiceCreateClient struct {
	grpc.ClientStream
}

func (x *contextDomainTableChangeServiceCreateClient) Send(m *ContextDomainTableChangeRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *contextDomainTableChangeServiceCreateClient) CloseAndRecv() (*output.PersistenceDataResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(output.PersistenceDataResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ContextDomainTableChangeServiceServer is the server API for ContextDomainTableChangeService service.
// All implementations must embed UnimplementedContextDomainTableChangeServiceServer
// for forward compatibility
type ContextDomainTableChangeServiceServer interface {
	Create(ContextDomainTableChangeService_CreateServer) error
	mustEmbedUnimplementedContextDomainTableChangeServiceServer()
}

// UnimplementedContextDomainTableChangeServiceServer must be embedded to have forward compatible implementations.
type UnimplementedContextDomainTableChangeServiceServer struct {
}

func (UnimplementedContextDomainTableChangeServiceServer) Create(ContextDomainTableChangeService_CreateServer) error {
	return status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (UnimplementedContextDomainTableChangeServiceServer) mustEmbedUnimplementedContextDomainTableChangeServiceServer() {
}

// UnsafeContextDomainTableChangeServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ContextDomainTableChangeServiceServer will
// result in compilation errors.
type UnsafeContextDomainTableChangeServiceServer interface {
	mustEmbedUnimplementedContextDomainTableChangeServiceServer()
}

func RegisterContextDomainTableChangeServiceServer(s grpc.ServiceRegistrar, srv ContextDomainTableChangeServiceServer) {
	s.RegisterService(&ContextDomainTableChangeService_ServiceDesc, srv)
}

func _ContextDomainTableChangeService_Create_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ContextDomainTableChangeServiceServer).Create(&contextDomainTableChangeServiceCreateServer{stream})
}

type ContextDomainTableChangeService_CreateServer interface {
	SendAndClose(*output.PersistenceDataResponse) error
	Recv() (*ContextDomainTableChangeRequest, error)
	grpc.ServerStream
}

type contextDomainTableChangeServiceCreateServer struct {
	grpc.ServerStream
}

func (x *contextDomainTableChangeServiceCreateServer) SendAndClose(m *output.PersistenceDataResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *contextDomainTableChangeServiceCreateServer) Recv() (*ContextDomainTableChangeRequest, error) {
	m := new(ContextDomainTableChangeRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ContextDomainTableChangeService_ServiceDesc is the grpc.ServiceDesc for ContextDomainTableChangeService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ContextDomainTableChangeService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "contextdomain_change.ContextDomainTableChangeService",
	HandlerType: (*ContextDomainTableChangeServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Create",
			Handler:       _ContextDomainTableChangeService_Create_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "context_domain_table_change.proto",
}
